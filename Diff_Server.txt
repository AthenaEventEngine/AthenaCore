### Eclipse Workspace Patch 1.0
#P L2J-Server_Engine_core
Index: java/com/l2jserver/gameserver/GameServer.java
===================================================================
--- java/com/l2jserver/gameserver/GameServer.java	(revision 13060)
+++ java/com/l2jserver/gameserver/GameServer.java	(working copy)
@@ -30,6 +30,8 @@
 import java.util.logging.LogManager;
 import java.util.logging.Logger;
 
+import net.sf.eventengine.EventEngineManager;
+
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.Server;
@@ -373,6 +375,10 @@
 		
 		_log.info("IdFactory: Free ObjectID's remaining: " + IdFactory.getInstance().size());
 		
+		// L2J-EventEngine
+		printSection("L2J-Event Engine");
+		EventEngineManager.getInstance();
+		
 		TvTManager.getInstance();
 		KnownListUpdateTaskManager.getInstance();
 		
Index: java/com/l2jserver/gameserver/model/actor/instance/L2PcInstance.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/instance/L2PcInstance.java	(revision 13060)
+++ java/com/l2jserver/gameserver/model/actor/instance/L2PcInstance.java	(working copy)
@@ -48,6 +48,8 @@
 import java.util.concurrent.locks.ReentrantLock;
 import java.util.logging.Level;
 
+import net.sf.eventengine.EventEngineManager;
+
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.GameTimeController;
@@ -5110,6 +5112,9 @@
 	{
 		if (killer != null)
 		{
+			// L2J-EventEngine
+			EventEngineManager.listenerOnDeath(this);
+			
 			final L2PcInstance pk = killer.getActingPlayer();
 			if (pk != null)
 			{
@@ -8256,6 +8261,12 @@
 			return false;
 		}
 		
+		// L2J-EventEngine
+		if (EventEngineManager.isPlayerInEvent(this))
+		{
+			return true;
+		}
+		
 		// Check if the attacker is in TvT and TvT is started
 		if (isOnEvent())
 		{
@@ -11430,6 +11441,16 @@
 			_log.log(Level.SEVERE, "deleteMe()", e);
 		}
 		
+		// L2J-EventEngine
+		try
+		{
+			EventEngineManager.listenerOnLogout(this);
+		}
+		catch (Exception e)
+		{
+			_log.log(Level.SEVERE, "deleteMe()", e);
+		}
+		
 		// TvT Event removal
 		try
 		{
Index: java/com/l2jserver/gameserver/model/actor/L2Character.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/L2Character.java	(revision 13060)
+++ java/com/l2jserver/gameserver/model/actor/L2Character.java	(working copy)
@@ -36,6 +36,8 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+import net.sf.eventengine.EventEngineManager;
+
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.GameTimeController;
 import com.l2jserver.gameserver.GeoData;
@@ -834,6 +836,15 @@
 				return;
 			}
 			
+			// L2J-EventEngine
+			if (isPlayable() && (getTarget() instanceof L2Character))
+			{
+				if (EventEngineManager.listenerOnAttack((L2Playable) this, (L2Character) getTarget()))
+				{
+					return;
+				}
+			}
+			
 			// Notify to scripts
 			final TerminateReturn attackReturn = EventDispatcher.getInstance().notifyEvent(new OnCreatureAttack(this, target), this, TerminateReturn.class);
 			if ((attackReturn != null) && attackReturn.terminate())
@@ -1611,6 +1622,15 @@
 	 */
 	public void doCast(Skill skill)
 	{
+		// L2J-EventEngine
+		if (isPlayable())
+		{
+			if (EventEngineManager.listenerOnUseSkill((L2Playable) this, (L2Character) getTarget(), skill))
+			{
+				return;
+			}
+		}
+		
 		beginCast(skill, false);
 	}
 	
@@ -2508,6 +2528,15 @@
 			return false;
 		}
 		
+		// L2J-EventEngine
+		if (killer != null)
+		{
+			if (killer.isPlayable())
+			{
+				EventEngineManager.listenerOnKill((L2Playable) killer, this);
+			}
+		}
+		
 		// killing is only possible one time
 		synchronized (this)
 		{
Index: java/com/l2jserver/gameserver/network/serverpackets/Die.java
===================================================================
--- java/com/l2jserver/gameserver/network/serverpackets/Die.java	(revision 13060)
+++ java/com/l2jserver/gameserver/network/serverpackets/Die.java	(working copy)
@@ -18,6 +18,8 @@
  */
 package com.l2jserver.gameserver.network.serverpackets;
 
+import net.sf.eventengine.EventEngineManager;
+
 import com.l2jserver.gameserver.data.xml.impl.AdminData;
 import com.l2jserver.gameserver.instancemanager.CHSiegeManager;
 import com.l2jserver.gameserver.instancemanager.CastleManager;
@@ -36,7 +38,7 @@
 public class Die extends L2GameServerPacket
 {
 	private final int _charObjId;
-	private final boolean _canTeleport;
+	private boolean _canTeleport;
 	private final boolean _sweepable;
 	private L2AccessLevel _access = AdminData.getInstance().getAccessLevel(0);
 	private L2Clan _clan;
@@ -66,6 +68,15 @@
 		writeD(_charObjId);
 		writeD(_canTeleport ? 0x01 : 0);
 		
+		// L2J-EventEngine
+		if (_activeChar.isPlayer())
+		{
+			if (EventEngineManager.isPlayerInEvent((L2PcInstance) _activeChar))
+			{
+				_canTeleport = false;
+			}
+		}
+		
 		if (_activeChar.isPlayer() && !OlympiadManager.getInstance().isRegistered(_activeChar.getActingPlayer()) && !_activeChar.isOnEvent())
 		{
 			

diff --git a/L2J_DataPack/.classpath b/L2J_DataPack/.classpath
index cd1f3e2..3b01913 100644
--- a/L2J_DataPack/.classpath
+++ b/L2J_DataPack/.classpath
@@ -1,8 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <classpath>
-	<classpathentry including="**/*.java" kind="src" path="dist/game/data/scripts" />
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8" />
-	<classpathentry combineaccessrules="false" kind="src" path="/L2J_Server" />
-	<classpathentry kind="lib" path="/L2J_Server/dist/libs/mmocore.jar" />
-	<classpathentry kind="output" path="bin" />
-</classpath>
\ No newline at end of file
+	<classpathentry including="**/*.java" kind="src" path="dist/game/data/scripts"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/L2J_Server"/>
+	<classpathentry kind="lib" path="/L2J_Server/dist/libs/mmocore.jar"/>
+	<classpathentry kind="lib" path="/L2J_Server/dist/libs/L2J_EventEngine.jar"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
diff --git a/L2J_DataPack/dist/game/data/scripts/handlers/actionhandlers/L2NpcAction.java b/L2J_DataPack/dist/game/data/scripts/handlers/actionhandlers/L2NpcAction.java
index 94fe9c4..24c486b 100644
--- a/L2J_DataPack/dist/game/data/scripts/handlers/actionhandlers/L2NpcAction.java
+++ b/L2J_DataPack/dist/game/data/scripts/handlers/actionhandlers/L2NpcAction.java
@@ -34,6 +34,8 @@
 import com.l2jserver.gameserver.network.serverpackets.MoveToPawn;
 import com.l2jserver.util.Rnd;
 
+import net.sf.eventengine.EventEngineManager;
+
 public class L2NpcAction implements IActionHandler
 {
 	/**
@@ -41,20 +43,18 @@
 	 * <BR>
 	 * <B><U> Actions on first click on the L2Npc (Select it)</U> :</B><BR>
 	 * <BR>
-	 * <li>Set the L2Npc as target of the L2PcInstance player (if necessary)</li> <li>Send a Server->Client packet MyTargetSelected to the L2PcInstance player (display the select window)</li> <li>If L2Npc is autoAttackable, send a Server->Client packet StatusUpdate to the L2PcInstance in order to
-	 * update L2Npc HP bar</li> <li>Send a Server->Client packet ValidateLocation to correct the L2Npc position and heading on the client</li><BR>
+	 * <li>Set the L2Npc as target of the L2PcInstance player (if necessary)</li>
+	 * <li>Send a Server->Client packet MyTargetSelected to the L2PcInstance player (display the select window)</li>
+	 * <li>If L2Npc is autoAttackable, send a Server->Client packet StatusUpdate to the L2PcInstance in order to update L2Npc HP bar</li>
+	 * <li>Send a Server->Client packet ValidateLocation to correct the L2Npc position and heading on the client</li><BR>
 	 * <BR>
 	 * <B><U> Actions on second click on the L2Npc (Attack it/Intercat with it)</U> :</B><BR>
 	 * <BR>
-	 * <li>Send a Server->Client packet MyTargetSelected to the L2PcInstance player (display the select window)</li> <li>If L2Npc is autoAttackable, notify the L2PcInstance AI with AI_INTENTION_ATTACK (after a height verification)</li> <li>If L2Npc is NOT autoAttackable, notify the L2PcInstance AI
-	 * with AI_INTENTION_INTERACT (after a distance verification) and show message</li><BR>
+	 * <li>Send a Server->Client packet MyTargetSelected to the L2PcInstance player (display the select window)</li>
+	 * <li>If L2Npc is autoAttackable, notify the L2PcInstance AI with AI_INTENTION_ATTACK (after a height verification)</li>
+	 * <li>If L2Npc is NOT autoAttackable, notify the L2PcInstance AI with AI_INTENTION_INTERACT (after a distance verification) and show message</li><BR>
 	 * <BR>
-	 * <FONT COLOR=#FF0000><B> <U>Caution</U> : Each group of Server->Client packet must be terminated by a ActionFailed packet in order to avoid that client wait an other packet</B></FONT><BR>
-	 * <BR>
-	 * <B><U> Example of use </U> :</B><BR>
-	 * <BR>
-	 * <li>Client packet : Action, AttackRequest</li><BR>
-	 * <BR>
+	 * <FONT COLOR=#FF0000><B> <U>Caution</U> : Each group of Server->Client packet must be terminated by a ActionFailed packet in order to avoid that client wait an other packet</B></FONT><BR> <BR> <B><U> Example of use </U> :</B><BR> <BR> <li>Client packet : Action, AttackRequest</li><BR> <BR>
 	 * @param activeChar The L2PcInstance that start an action on the L2Npc
 	 */
 	@Override
@@ -132,6 +132,12 @@
 						}
 						else
 						{
+							// L2J EventEngine
+							if (!EventEngineManager.getInstance().listenerOnInteract(activeChar, npc))
+							{
+								return true;
+							}
+							
 							npc.showChatWindow(activeChar);
 						}
 					}
